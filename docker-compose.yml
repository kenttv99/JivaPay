version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_EXPOSED_PORT:-15432}:5432'

  redis:
    image: redis:6-alpine
    ports:
      - '${REDIS_EXPOSED_PORT:-16379}:6379'

  # S3-compatible storage for development
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY:-minio}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY:-minio123}
    ports:
      - '${S3_EXPOSED_PORT:-9000}:9000'
      - '${S3_CONSOLE_EXPOSED_PORT:-9001}:9001'
    volumes:
      - minio_data:/data

  merchant_api:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn backend.servers.merchant.server:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app/backend
    ports:
      - '18001:8000'
    depends_on:
      - postgres
      - redis
      - minio

  trader_api:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn backend.servers.trader.server:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app/backend
    ports:
      - '8002:8000'
    depends_on:
      - postgres
      - redis

  gateway_api:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn backend.servers.gateway.server:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app/backend
    ports:
      - '8003:8000'
    depends_on:
      - postgres
      - redis
      - minio

  admin_api:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn backend.servers.admin.server:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app/backend
    ports:
      - '8004:8000'
    depends_on:
      - postgres

  support_api:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn backend.servers.support.server:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app/backend
    ports:
      - '8005:8000'
    depends_on:
      - postgres

  teamlead_api:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn backend.servers.teamlead.server:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app/backend
    ports:
      - '8006:8000'
    depends_on:
      - postgres
      - redis

  worker:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A backend.worker.app worker --loglevel=info
    volumes:
      - ./backend:/app/backend
    depends_on:
      - postgres
      - redis

volumes:
  postgres_data: {}
  minio_data: {} 