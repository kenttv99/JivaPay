version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: jivapay
      POSTGRES_PASSWORD: jivapay
      POSTGRES_DB: jivapay_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '15432:5432'

  redis:
    image: redis:6-alpine
    ports:
      - '16379:6379'

  # S3-compatible storage for development
  minio:
    image: minio/minio:latest
    command: server /data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - '9000:9000'
    volumes:
      - minio_data:/data

  merchant_api:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn backend.servers.merchant.server:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app/backend
    environment:
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      DATABASE_URL: postgresql://jivapay:jivapay@postgres:5432/jivapay_db
      REDIS_URL: redis://redis:6379/0
      S3_ENDPOINT_URL: http://minio:9000
      S3_ACCESS_KEY: minio
      S3_SECRET_KEY: minio123
      S3_BUCKET_NAME: jivapay
    ports:
      - '18001:8000'
    depends_on:
      - postgres
      - redis
      - minio

  trader_api:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn backend.servers.trader.server:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app/backend
    environment:
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      DATABASE_URL: postgresql://jivapay:jivapay@postgres:5432/jivapay_db
      REDIS_URL: redis://redis:6379/0
    ports:
      - '8002:8000'
    depends_on:
      - postgres
      - redis

  gateway_api:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn backend.servers.gateway.server:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app/backend
    environment:
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      DATABASE_URL: postgresql://jivapay:jivapay@postgres:5432/jivapay_db
      REDIS_URL: redis://redis:6379/0
      S3_ENDPOINT_URL: http://minio:9000
      S3_ACCESS_KEY: minio
      S3_SECRET_KEY: minio123
      S3_BUCKET_NAME: jivapay
    ports:
      - '8003:8000'
    depends_on:
      - postgres
      - redis
      - minio

  admin_api:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn backend.servers.admin.server:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app/backend
    environment:
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      DATABASE_URL: postgresql://jivapay:jivapay@postgres:5432/jivapay_db
    ports:
      - '8004:8000'
    depends_on:
      - postgres

  support_api:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn backend.servers.support.server:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app/backend
    environment:
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      DATABASE_URL: postgresql://jivapay:jivapay@postgres:5432/jivapay_db
    ports:
      - '8005:8000'
    depends_on:
      - postgres

  worker:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A backend.worker.app worker --loglevel=info
    volumes:
      - ./backend:/app/backend
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: postgresql://jivapay:jivapay@postgres:5432/jivapay_db
      REDIS_URL: redis://redis:6379/0
    depends_on:
      - postgres
      - redis

volumes:
  postgres_data: {}
  minio_data: {} 