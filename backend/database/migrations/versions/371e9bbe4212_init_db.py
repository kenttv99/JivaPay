"""init_db

Revision ID: 371e9bbe4212
Revises: 
Create Date: 2025-05-15 21:33:41.535873

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '371e9bbe4212'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('configuration_settings',
    sa.Column('key', sa.String(length=255), nullable=False, comment='Unique key identifying the configuration setting'),
    sa.Column('value', sa.Text(), nullable=False, comment='Value of the configuration setting (stored as text)'),
    sa.Column('description', sa.Text(), nullable=True, comment='Description of the setting for administrators'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp of creation'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True, comment='Timestamp of last update'),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_index(op.f('ix_configuration_settings_key'), 'configuration_settings', ['key'], unique=False)
    op.create_table('countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country_name', sa.String(length=100), nullable=False),
    sa.Column('country_code_iso', sa.String(length=2), nullable=False),
    sa.Column('public_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('access', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('country_code_iso'),
    sa.UniqueConstraint('country_name')
    )
    op.create_index(op.f('ix_countries_id'), 'countries', ['id'], unique=False)
    op.create_table('crypto_currencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('currency_name', sa.String(length=50), nullable=False),
    sa.Column('currency_code', sa.String(length=10), nullable=False),
    sa.Column('public_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('access', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('currency_code'),
    sa.UniqueConstraint('currency_name')
    )
    op.create_index(op.f('ix_crypto_currencies_id'), 'crypto_currencies', ['id'], unique=False)
    op.create_table('exchange_rates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('fiat', sa.String(length=10), nullable=False),
    sa.Column('buy_rate', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('sell_rate', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('median_rate', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('source', sa.String(length=255), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exchange_rates_id'), 'exchange_rates', ['id'], unique=False)
    op.create_table('owner_of_requisites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fio', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_owner_of_requisites_id'), 'owner_of_requisites', ['id'], unique=False)
    op.create_table('requisite_distribution_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('strategy', sa.String(length=50), nullable=False),
    sa.Column('params', sa.JSON(), nullable=True),
    sa.Column('scope', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('applies_to', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.create_table('time_zones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('utc_offset', sa.Integer(), nullable=False),
    sa.Column('access', sa.Boolean(), nullable=False),
    sa.Column('regions', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('fiat_currencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('currency_name', sa.String(length=50), nullable=False),
    sa.Column('currency_code', sa.String(length=3), nullable=False),
    sa.Column('public_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('access', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('currency_code'),
    sa.UniqueConstraint('currency_name')
    )
    op.create_index(op.f('ix_fiat_currencies_id'), 'fiat_currencies', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_role_id'), 'users', ['role_id'], unique=False)
    op.create_table('admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('can_manage_other_admins', sa.Boolean(), nullable=False),
    sa.Column('can_manage_supports', sa.Boolean(), nullable=False),
    sa.Column('can_manage_merchants', sa.Boolean(), nullable=False),
    sa.Column('can_manage_traders', sa.Boolean(), nullable=False),
    sa.Column('can_edit_system_settings', sa.Boolean(), nullable=False),
    sa.Column('can_edit_limits', sa.Boolean(), nullable=False),
    sa.Column('can_view_full_logs', sa.Boolean(), nullable=False),
    sa.Column('can_handle_appeals', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=100), nullable=True),
    sa.Column('action', sa.String(length=255), nullable=False),
    sa.Column('target_entity', sa.String(length=100), nullable=True),
    sa.Column('target_id', sa.Integer(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_audit_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index('ix_audit_logs_target', 'audit_logs', ['target_entity', 'target_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_timestamp'), 'audit_logs', ['timestamp'], unique=False)
    op.create_table('banks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fiat_id', sa.Integer(), nullable=False),
    sa.Column('bank_name', sa.String(length=100), nullable=False),
    sa.Column('public_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('interbank', sa.Boolean(), nullable=False),
    sa.Column('access', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['fiat_id'], ['fiat_currencies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('bank_name')
    )
    op.create_index(op.f('ix_banks_id'), 'banks', ['id'], unique=False)
    op.create_table('merchants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('avatar_url', sa.String(length=255), nullable=True),
    sa.Column('two_factor_auth_token', sa.String(length=32), nullable=True),
    sa.Column('verification_level', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('payment_methods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fiat_id', sa.Integer(), nullable=False),
    sa.Column('method_name', sa.String(length=50), nullable=False),
    sa.Column('public_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('access', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['fiat_id'], ['fiat_currencies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('method_name')
    )
    op.create_index(op.f('ix_payment_methods_id'), 'payment_methods', ['id'], unique=False)
    op.create_table('supports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('can_edit_trader_settings', sa.Boolean(), nullable=False),
    sa.Column('can_manage_orders', sa.Boolean(), nullable=False),
    sa.Column('can_view_orders', sa.Boolean(), nullable=False),
    sa.Column('can_handle_appeals', sa.Boolean(), nullable=False),
    sa.Column('can_view_sensitive_data', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('teamleads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('avalible_bank_methods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fiat_id', sa.Integer(), nullable=False),
    sa.Column('bank_id', sa.Integer(), nullable=False),
    sa.Column('method_id', sa.Integer(), nullable=False),
    sa.Column('access', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['bank_id'], ['banks.id'], ),
    sa.ForeignKeyConstraint(['fiat_id'], ['fiat_currencies.id'], ),
    sa.ForeignKeyConstraint(['method_id'], ['payment_methods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_avalible_bank_method_lookup', 'avalible_bank_methods', ['fiat_id', 'bank_id', 'method_id'], unique=True)
    op.create_index(op.f('ix_avalible_bank_methods_id'), 'avalible_bank_methods', ['id'], unique=False)
    op.create_table('merchant_stores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('merchant_id', sa.Integer(), nullable=False),
    sa.Column('store_name', sa.String(length=255), nullable=False),
    sa.Column('crypto_currency_id', sa.Integer(), nullable=False),
    sa.Column('fiat_currency_id', sa.Integer(), nullable=False),
    sa.Column('public_api_key', sa.String(length=255), nullable=False),
    sa.Column('private_api_key', sa.String(length=255), nullable=False),
    sa.Column('lower_limit', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('upper_limit', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('trafic_access', sa.Boolean(), nullable=False),
    sa.Column('access', sa.Boolean(), nullable=False),
    sa.Column('pay_in_enabled', sa.Boolean(), nullable=False),
    sa.Column('pay_out_enabled', sa.Boolean(), nullable=False),
    sa.Column('callback_url', sa.String(length=512), nullable=True),
    sa.Column('secret_key', sa.String(length=255), nullable=True),
    sa.Column('gateway_require_customer_id_param', sa.Boolean(), nullable=False),
    sa.Column('gateway_require_amount_param', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['crypto_currency_id'], ['crypto_currencies.id'], ),
    sa.ForeignKeyConstraint(['fiat_currency_id'], ['fiat_currencies.id'], ),
    sa.ForeignKeyConstraint(['merchant_id'], ['merchants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_api_key')
    )
    op.create_table('traders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('avatar_url', sa.String(length=255), nullable=True),
    sa.Column('preferred_fiat_currency_id', sa.Integer(), nullable=True),
    sa.Column('crypto_currency_id', sa.Integer(), nullable=True),
    sa.Column('verification_level', sa.String(length=50), nullable=False),
    sa.Column('pay_in', sa.Boolean(), nullable=False),
    sa.Column('pay_out', sa.Boolean(), nullable=False),
    sa.Column('trafic_priority', sa.Integer(), nullable=False),
    sa.Column('in_work', sa.Boolean(), nullable=False),
    sa.Column('two_factor_auth_token', sa.String(length=32), nullable=True),
    sa.Column('time_zone_id', sa.Integer(), nullable=True),
    sa.Column('base_pay_in_limit', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('base_pay_out_limit', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('team_lead_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['crypto_currency_id'], ['crypto_currencies.id'], ),
    sa.ForeignKeyConstraint(['preferred_fiat_currency_id'], ['fiat_currencies.id'], ),
    sa.ForeignKeyConstraint(['team_lead_id'], ['teamleads.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['time_zone_id'], ['time_zones.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index('ix_trader_priority_lookup', 'traders', ['in_work', 'trafic_priority'], unique=False)
    op.create_index(op.f('ix_traders_in_work'), 'traders', ['in_work'], unique=False)
    op.create_index(op.f('ix_traders_team_lead_id'), 'traders', ['team_lead_id'], unique=False)
    op.create_index(op.f('ix_traders_trafic_priority'), 'traders', ['trafic_priority'], unique=False)
    op.create_table('balance_stores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('crypto_currency_id', sa.Integer(), nullable=False),
    sa.Column('balance', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['crypto_currency_id'], ['crypto_currencies.id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['merchant_stores.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_balance_stores_id'), 'balance_stores', ['id'], unique=False)
    op.create_table('balance_traders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trader_id', sa.Integer(), nullable=False),
    sa.Column('fiat_currency_id', sa.Integer(), nullable=False),
    sa.Column('balance', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['fiat_currency_id'], ['fiat_currencies.id'], ),
    sa.ForeignKeyConstraint(['trader_id'], ['traders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_balance_traders_id'), 'balance_traders', ['id'], unique=False)
    op.create_table('req_traders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fiat_id', sa.Integer(), nullable=False),
    sa.Column('trader_id', sa.Integer(), nullable=False),
    sa.Column('owner_of_requisites_id', sa.Integer(), nullable=False),
    sa.Column('method_id', sa.Integer(), nullable=False),
    sa.Column('bank_id', sa.Integer(), nullable=False),
    sa.Column('req_number', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_used_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('distribution_weight', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('is_excluded_from_distribution', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['bank_id'], ['banks.id'], ),
    sa.ForeignKeyConstraint(['fiat_id'], ['fiat_currencies.id'], ),
    sa.ForeignKeyConstraint(['method_id'], ['payment_methods.id'], ),
    sa.ForeignKeyConstraint(['owner_of_requisites_id'], ['owner_of_requisites.id'], ),
    sa.ForeignKeyConstraint(['trader_id'], ['traders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_req_trader_status', 'req_traders', ['status'], unique=False)
    op.create_index(op.f('ix_req_traders_id'), 'req_traders', ['id'], unique=False)
    op.create_index(op.f('ix_req_traders_status'), 'req_traders', ['status'], unique=False)
    op.create_index(op.f('ix_req_traders_trader_id'), 'req_traders', ['trader_id'], unique=False)
    op.create_table('store_addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('merchant_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('fiat_currency_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['fiat_currency_id'], ['fiat_currencies.id'], ),
    sa.ForeignKeyConstraint(['merchant_id'], ['merchants.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['store_id'], ['merchant_stores.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_store_address_status', 'store_addresses', ['status'], unique=False)
    op.create_index(op.f('ix_store_addresses_id'), 'store_addresses', ['id'], unique=False)
    op.create_index(op.f('ix_store_addresses_status'), 'store_addresses', ['status'], unique=False)
    op.create_table('store_commissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('commission_payin', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('commission_payout', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['merchant_stores.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_store_commissions_id'), 'store_commissions', ['id'], unique=False)
    op.create_table('store_gateways',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['merchant_stores.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_store_gateways_id'), 'store_gateways', ['id'], unique=False)
    op.create_table('trader_addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trader_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('fiat_currency_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['fiat_currency_id'], ['fiat_currencies.id'], ),
    sa.ForeignKeyConstraint(['trader_id'], ['traders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_trader_address_status', 'trader_addresses', ['status'], unique=False)
    op.create_index(op.f('ix_trader_addresses_id'), 'trader_addresses', ['id'], unique=False)
    op.create_index(op.f('ix_trader_addresses_status'), 'trader_addresses', ['status'], unique=False)
    op.create_table('trader_commissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trader_id', sa.Integer(), nullable=False),
    sa.Column('commission_payin', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('commission_payout', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['trader_id'], ['traders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trader_commissions_id'), 'trader_commissions', ['id'], unique=False)
    op.create_table('full_requisites_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('requisite_id', sa.Integer(), nullable=False),
    sa.Column('pay_in', sa.Boolean(), nullable=False),
    sa.Column('pay_out', sa.Boolean(), nullable=False),
    sa.Column('lower_limit', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('upper_limit', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('total_limit', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('turnover_limit_minutes', sa.Integer(), nullable=False),
    sa.Column('turnover_day_max', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['requisite_id'], ['req_traders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('requisite_id')
    )
    op.create_index(op.f('ix_full_requisites_settings_id'), 'full_requisites_settings', ['id'], unique=False)
    op.create_table('incoming_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('merchant_id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('gateway_id', sa.Integer(), nullable=True),
    sa.Column('target_method_id', sa.Integer(), nullable=True),
    sa.Column('target_bank_id', sa.Integer(), nullable=True),
    sa.Column('fiat_currency_id', sa.Integer(), nullable=False),
    sa.Column('crypto_currency_id', sa.Integer(), nullable=False),
    sa.Column('amount_fiat', sa.DECIMAL(precision=20, scale=2), nullable=True),
    sa.Column('amount_crypto', sa.DECIMAL(precision=20, scale=8), nullable=True),
    sa.Column('exchange_rate', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('store_commission', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('order_type', sa.String(length=50), nullable=False),
    sa.Column('customer_id', sa.String(length=255), nullable=True),
    sa.Column('customer_ip', sa.String(length=100), nullable=True),
    sa.Column('return_url', sa.String(length=512), nullable=True),
    sa.Column('callback_url', sa.String(length=512), nullable=True),
    sa.Column('client_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('last_attempt_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('failure_reason', sa.Text(), nullable=True),
    sa.Column('payment_details_submitted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['crypto_currency_id'], ['crypto_currencies.id'], ),
    sa.ForeignKeyConstraint(['fiat_currency_id'], ['fiat_currencies.id'], ),
    sa.ForeignKeyConstraint(['gateway_id'], ['store_gateways.id'], ),
    sa.ForeignKeyConstraint(['merchant_id'], ['merchants.id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['merchant_stores.id'], ),
    sa.ForeignKeyConstraint(['target_bank_id'], ['banks.id'], ),
    sa.ForeignKeyConstraint(['target_method_id'], ['payment_methods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_incoming_orders_client_id'), 'incoming_orders', ['client_id'], unique=False)
    op.create_index(op.f('ix_incoming_orders_id'), 'incoming_orders', ['id'], unique=False)
    op.create_index('ix_incoming_orders_merchant_store', 'incoming_orders', ['merchant_id', 'store_id'], unique=False)
    op.create_index(op.f('ix_incoming_orders_order_type'), 'incoming_orders', ['order_type'], unique=False)
    op.create_index(op.f('ix_incoming_orders_status'), 'incoming_orders', ['status'], unique=False)
    op.create_index('ix_incoming_orders_status_created', 'incoming_orders', ['status', 'created_at'], unique=False)
    op.create_table('order_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('incoming_order_id', sa.Integer(), nullable=True),
    sa.Column('hash_id', sa.String(length=255), nullable=False),
    sa.Column('trader_id', sa.Integer(), nullable=False),
    sa.Column('requisite_id', sa.Integer(), nullable=False),
    sa.Column('merchant_id', sa.Integer(), nullable=False),
    sa.Column('gateway_id', sa.Integer(), nullable=True),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('method_id', sa.Integer(), nullable=False),
    sa.Column('bank_id', sa.Integer(), nullable=False),
    sa.Column('crypto_currency_id', sa.Integer(), nullable=False),
    sa.Column('fiat_id', sa.Integer(), nullable=False),
    sa.Column('order_type', sa.String(length=50), nullable=False),
    sa.Column('exchange_rate', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('amount_currency', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('total_fiat', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('amount_crypto', sa.DECIMAL(precision=20, scale=8), nullable=True),
    sa.Column('amount_fiat', sa.DECIMAL(precision=20, scale=2), nullable=True),
    sa.Column('store_commission', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('trader_commission', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('client_id', sa.String(length=255), nullable=True),
    sa.Column('customer_id', sa.String(length=255), nullable=True),
    sa.Column('customer_ip', sa.String(length=100), nullable=True),
    sa.Column('payment_details_submitted', sa.Boolean(), nullable=False),
    sa.Column('receipt_url', sa.String(length=512), nullable=True),
    sa.Column('trader_receipt_url', sa.String(length=512), nullable=True),
    sa.Column('cancellation_reason', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['bank_id'], ['banks.id'], ),
    sa.ForeignKeyConstraint(['crypto_currency_id'], ['crypto_currencies.id'], ),
    sa.ForeignKeyConstraint(['fiat_id'], ['fiat_currencies.id'], ),
    sa.ForeignKeyConstraint(['gateway_id'], ['store_gateways.id'], ),
    sa.ForeignKeyConstraint(['incoming_order_id'], ['incoming_orders.id'], ),
    sa.ForeignKeyConstraint(['merchant_id'], ['merchants.id'], ),
    sa.ForeignKeyConstraint(['method_id'], ['payment_methods.id'], ),
    sa.ForeignKeyConstraint(['requisite_id'], ['req_traders.id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['merchant_stores.id'], ),
    sa.ForeignKeyConstraint(['trader_id'], ['traders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('incoming_order_id')
    )
    op.create_index(op.f('ix_order_history_client_id'), 'order_history', ['client_id'], unique=False)
    op.create_index('ix_order_history_created_at', 'order_history', ['created_at'], unique=False)
    op.create_index(op.f('ix_order_history_hash_id'), 'order_history', ['hash_id'], unique=True)
    op.create_index(op.f('ix_order_history_id'), 'order_history', ['id'], unique=False)
    op.create_index(op.f('ix_order_history_merchant_id'), 'order_history', ['merchant_id'], unique=False)
    op.create_index(op.f('ix_order_history_order_type'), 'order_history', ['order_type'], unique=False)
    op.create_index(op.f('ix_order_history_status'), 'order_history', ['status'], unique=False)
    op.create_index(op.f('ix_order_history_store_id'), 'order_history', ['store_id'], unique=False)
    op.create_index(op.f('ix_order_history_trader_id'), 'order_history', ['trader_id'], unique=False)
    op.create_table('balance_store_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('crypto_currency_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('balance_change', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('new_balance', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('operation_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['crypto_currency_id'], ['crypto_currencies.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['order_history.id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['merchant_stores.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_balance_store_history_id'), 'balance_store_history', ['id'], unique=False)
    op.create_index(op.f('ix_balance_store_history_operation_type'), 'balance_store_history', ['operation_type'], unique=False)
    op.create_table('balance_trader_crypto_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trader_id', sa.Integer(), nullable=False),
    sa.Column('crypto_currency_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('operation_type', sa.String(length=50), nullable=False),
    sa.Column('network', sa.String(length=50), nullable=False),
    sa.Column('balance_change', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('new_balance', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['crypto_currency_id'], ['crypto_currencies.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['order_history.id'], ),
    sa.ForeignKeyConstraint(['trader_id'], ['traders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_balance_trader_crypto_history_id'), 'balance_trader_crypto_history', ['id'], unique=False)
    op.create_index('ix_balance_trader_crypto_history_op_type', 'balance_trader_crypto_history', ['operation_type'], unique=False)
    op.create_index(op.f('ix_balance_trader_crypto_history_operation_type'), 'balance_trader_crypto_history', ['operation_type'], unique=False)
    op.create_table('balance_trader_fiat_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trader_id', sa.Integer(), nullable=False),
    sa.Column('fiat_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('operation_type', sa.String(length=50), nullable=False),
    sa.Column('network', sa.String(length=50), nullable=True),
    sa.Column('balance_change', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('new_balance', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['fiat_id'], ['fiat_currencies.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['order_history.id'], ),
    sa.ForeignKeyConstraint(['trader_id'], ['traders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_balance_trader_fiat_history_id'), 'balance_trader_fiat_history', ['id'], unique=False)
    op.create_index('ix_balance_trader_fiat_history_op_type', 'balance_trader_fiat_history', ['operation_type'], unique=False)
    op.create_index(op.f('ix_balance_trader_fiat_history_operation_type'), 'balance_trader_fiat_history', ['operation_type'], unique=False)
    op.create_table('uploaded_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('actor_id', sa.Integer(), nullable=True),
    sa.Column('file_url', sa.String(length=512), nullable=False),
    sa.Column('doc_type', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['order_id'], ['order_history.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_uploaded_documents_id'), 'uploaded_documents', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_uploaded_documents_id'), table_name='uploaded_documents')
    op.drop_table('uploaded_documents')
    op.drop_index(op.f('ix_balance_trader_fiat_history_operation_type'), table_name='balance_trader_fiat_history')
    op.drop_index('ix_balance_trader_fiat_history_op_type', table_name='balance_trader_fiat_history')
    op.drop_index(op.f('ix_balance_trader_fiat_history_id'), table_name='balance_trader_fiat_history')
    op.drop_table('balance_trader_fiat_history')
    op.drop_index(op.f('ix_balance_trader_crypto_history_operation_type'), table_name='balance_trader_crypto_history')
    op.drop_index('ix_balance_trader_crypto_history_op_type', table_name='balance_trader_crypto_history')
    op.drop_index(op.f('ix_balance_trader_crypto_history_id'), table_name='balance_trader_crypto_history')
    op.drop_table('balance_trader_crypto_history')
    op.drop_index(op.f('ix_balance_store_history_operation_type'), table_name='balance_store_history')
    op.drop_index(op.f('ix_balance_store_history_id'), table_name='balance_store_history')
    op.drop_table('balance_store_history')
    op.drop_index(op.f('ix_order_history_trader_id'), table_name='order_history')
    op.drop_index(op.f('ix_order_history_store_id'), table_name='order_history')
    op.drop_index(op.f('ix_order_history_status'), table_name='order_history')
    op.drop_index(op.f('ix_order_history_order_type'), table_name='order_history')
    op.drop_index(op.f('ix_order_history_merchant_id'), table_name='order_history')
    op.drop_index(op.f('ix_order_history_id'), table_name='order_history')
    op.drop_index(op.f('ix_order_history_hash_id'), table_name='order_history')
    op.drop_index('ix_order_history_created_at', table_name='order_history')
    op.drop_index(op.f('ix_order_history_client_id'), table_name='order_history')
    op.drop_table('order_history')
    op.drop_index('ix_incoming_orders_status_created', table_name='incoming_orders')
    op.drop_index(op.f('ix_incoming_orders_status'), table_name='incoming_orders')
    op.drop_index(op.f('ix_incoming_orders_order_type'), table_name='incoming_orders')
    op.drop_index('ix_incoming_orders_merchant_store', table_name='incoming_orders')
    op.drop_index(op.f('ix_incoming_orders_id'), table_name='incoming_orders')
    op.drop_index(op.f('ix_incoming_orders_client_id'), table_name='incoming_orders')
    op.drop_table('incoming_orders')
    op.drop_index(op.f('ix_full_requisites_settings_id'), table_name='full_requisites_settings')
    op.drop_table('full_requisites_settings')
    op.drop_index(op.f('ix_trader_commissions_id'), table_name='trader_commissions')
    op.drop_table('trader_commissions')
    op.drop_index(op.f('ix_trader_addresses_status'), table_name='trader_addresses')
    op.drop_index(op.f('ix_trader_addresses_id'), table_name='trader_addresses')
    op.drop_index('ix_trader_address_status', table_name='trader_addresses')
    op.drop_table('trader_addresses')
    op.drop_index(op.f('ix_store_gateways_id'), table_name='store_gateways')
    op.drop_table('store_gateways')
    op.drop_index(op.f('ix_store_commissions_id'), table_name='store_commissions')
    op.drop_table('store_commissions')
    op.drop_index(op.f('ix_store_addresses_status'), table_name='store_addresses')
    op.drop_index(op.f('ix_store_addresses_id'), table_name='store_addresses')
    op.drop_index('ix_store_address_status', table_name='store_addresses')
    op.drop_table('store_addresses')
    op.drop_index(op.f('ix_req_traders_trader_id'), table_name='req_traders')
    op.drop_index(op.f('ix_req_traders_status'), table_name='req_traders')
    op.drop_index(op.f('ix_req_traders_id'), table_name='req_traders')
    op.drop_index('ix_req_trader_status', table_name='req_traders')
    op.drop_table('req_traders')
    op.drop_index(op.f('ix_balance_traders_id'), table_name='balance_traders')
    op.drop_table('balance_traders')
    op.drop_index(op.f('ix_balance_stores_id'), table_name='balance_stores')
    op.drop_table('balance_stores')
    op.drop_index(op.f('ix_traders_trafic_priority'), table_name='traders')
    op.drop_index(op.f('ix_traders_team_lead_id'), table_name='traders')
    op.drop_index(op.f('ix_traders_in_work'), table_name='traders')
    op.drop_index('ix_trader_priority_lookup', table_name='traders')
    op.drop_table('traders')
    op.drop_table('merchant_stores')
    op.drop_index(op.f('ix_avalible_bank_methods_id'), table_name='avalible_bank_methods')
    op.drop_index('ix_avalible_bank_method_lookup', table_name='avalible_bank_methods')
    op.drop_table('avalible_bank_methods')
    op.drop_table('teamleads')
    op.drop_table('supports')
    op.drop_index(op.f('ix_payment_methods_id'), table_name='payment_methods')
    op.drop_table('payment_methods')
    op.drop_table('merchants')
    op.drop_index(op.f('ix_banks_id'), table_name='banks')
    op.drop_table('banks')
    op.drop_index(op.f('ix_audit_logs_timestamp'), table_name='audit_logs')
    op.drop_index('ix_audit_logs_target', table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_table('admins')
    op.drop_index(op.f('ix_users_role_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_fiat_currencies_id'), table_name='fiat_currencies')
    op.drop_table('fiat_currencies')
    op.drop_table('time_zones')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_table('roles')
    op.drop_table('requisite_distribution_settings')
    op.drop_index(op.f('ix_owner_of_requisites_id'), table_name='owner_of_requisites')
    op.drop_table('owner_of_requisites')
    op.drop_index(op.f('ix_exchange_rates_id'), table_name='exchange_rates')
    op.drop_table('exchange_rates')
    op.drop_index(op.f('ix_crypto_currencies_id'), table_name='crypto_currencies')
    op.drop_table('crypto_currencies')
    op.drop_index(op.f('ix_countries_id'), table_name='countries')
    op.drop_table('countries')
    op.drop_index(op.f('ix_configuration_settings_key'), table_name='configuration_settings')
    op.drop_table('configuration_settings')
    # ### end Alembic commands ###
